# ===========================================
# WHALLI - Variables d'environnement Dokploy
# ===========================================
# Copiez ces variables dans votre interface Dokploy
# et remplacez les valeurs par vos vraies valeurs

# ===========================================
# 🌐 DOMAINE ET SSL
# ===========================================
DOMAIN=your-domain.com
ACME_EMAIL=your-email@domain.com

# ===========================================
# 🗄️ BASE DE DONNÉES POSTGRESQL
# ===========================================
POSTGRES_DB=whalli_production
POSTGRES_USER=whalli_user
POSTGRES_PASSWORD=change-this-super-secure-password-123

# ===========================================
# 🔴 REDIS CACHE
# ===========================================
REDIS_PASSWORD=change-this-redis-password-456

# ===========================================
# 📁 MINIO STORAGE (S3-COMPATIBLE)
# ===========================================
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=change-this-minio-password-789
MINIO_BUCKET=whalli-files

# ===========================================
# 🔐 SÉCURITÉ JWT
# ===========================================
JWT_SECRET=change-this-super-long-jwt-secret-key-for-production-use
NEXTAUTH_SECRET=change-this-nextauth-secret-key-for-better-auth

# ===========================================
# 🤖 FOURNISSEURS IA (API KEYS)
# ===========================================
# OpenAI - https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-key-here

# Anthropic - https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here

# xAI/Grok - https://console.x.ai/
XAI_API_KEY=xai-your-xai-key-here

# ===========================================
# 💳 STRIPE BILLING
# ===========================================
# Dashboard: https://dashboard.stripe.com/
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here
STRIPE_BASIC_PRICE_ID=price_your_basic_plan_id
STRIPE_PRO_PRICE_ID=price_your_pro_plan_id
STRIPE_ENTERPRISE_PRICE_ID=price_your_enterprise_plan_id

# ===========================================
# 📧 EMAIL SMTP
# ===========================================
# Gmail, SendGrid, AWS SES, Mailgun, etc.
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password-here
SMTP_FROM=noreply@your-domain.com

# ===========================================
# 🔐 OAUTH PROVIDERS
# ===========================================
# GitHub OAuth - https://github.com/settings/applications
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Google OAuth - https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# ===========================================
# 📊 MONITORING ET MÉTRIQUES
# ===========================================
# Traefik Dashboard (htpasswd -nb admin password)
TRAEFIK_AUTH=admin:$$apr1$$hash$$here

# Prometheus Dashboard
PROMETHEUS_AUTH=admin:$$apr1$$hash$$here

# Grafana
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=change-this-grafana-password

# ===========================================
# ⚙️ CONFIGURATION SYSTÈME
# ===========================================
# Rate Limiting
RATE_LIMIT_ENABLED=true

# ===========================================
# 🚨 VARIABLES PROBLÉMATIQUES À IGNORER
# ===========================================
# Ne PAS définir ces variables (causent des erreurs):
# - DdRltqSy (variable corrompue/inconnue)
# - v2R (variable corrompue/inconnue)
# - PRISMA_QUERY_ENGINE_LIBRARY (définie dans Dockerfile)
# - PRISMA_QUERY_ENGINE_BINARY (définie dans Dockerfile)

# ===========================================
# 📝 INSTRUCTIONS DOKPLOY
# ===========================================
# 1. Copiez TOUTES les variables ci-dessus
# 2. Allez dans votre projet Dokploy > Environment Variables
# 3. Collez et modifiez les valeurs selon vos besoins
# 4. Redéployez votre application
# 5. Vérifiez que le port 80 est libre sur votre serveur

# ===========================================
# 🔧 COMMANDES DE DIAGNOSTIC
# ===========================================
# Libérer le port 80:
# sudo systemctl stop apache2 nginx traefik
# docker stop $(docker ps -q --filter "publish=80")
#
# Vérifier les ports:
# ./scripts/fix-port-80.sh
#
# Nettoyer Docker:
# ./cleanup-ports.sh docker